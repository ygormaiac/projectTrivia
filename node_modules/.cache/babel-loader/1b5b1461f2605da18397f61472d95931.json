{"ast":null,"code":"var _jsxFileName = \"/Users/ygormaia/trybe-projects/projectTrivia/src/components/Header.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      total: 0\n    };\n    this.emailUser = this.emailUser.bind(this);\n  }\n\n  componentDidMount() {\n    if (localStorage.state) {\n      this.getScore();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const index = this.props.index;\n\n    if (prevProps.index !== index) {\n      this.getScore();\n    }\n  }\n\n  getScore() {\n    const getScore = JSON.parse(localStorage.getItem('state'));\n    const score = getScore.player.score;\n    this.setState({\n      total: score\n    });\n  }\n\n  emailUser() {\n    const emailPlayer = this.props.emailPlayer;\n    return md5(emailPlayer).toString();\n  }\n\n  render() {\n    const namePlayer = this.props.namePlayer;\n    const total = this.state.total;\n    return React.createElement(\"header\", {\n      \"data-testid\": \"header-player-name\",\n      className: \"header-play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"gravatar-img\",\n      \"data-testid\": \"header-profile-picture\",\n      alt: \"imageUser\",\n      src: `https://www.gravatar.com/avatar/${this.emailUser()}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"name-player\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, namePlayer), React.createElement(\"span\", {\n      \"data-testid\": \"header-score\",\n      className: \"total-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, total));\n  }\n\n}\n\nHeader.propTypes = {\n  emailPlayer: PropTypes.string.isRequired,\n  namePlayer: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  namePlayer: state.userReducer.name,\n  emailPlayer: state.userReducer.email\n});\n\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["/Users/ygormaia/trybe-projects/projectTrivia/src/components/Header.js"],"names":["React","connect","md5","PropTypes","Header","Component","constructor","state","total","emailUser","bind","componentDidMount","localStorage","getScore","componentDidUpdate","prevProps","index","props","JSON","parse","getItem","score","player","setState","emailPlayer","toString","render","namePlayer","propTypes","string","isRequired","number","mapStateToProps","userReducer","name","email"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,YAAY,CAACL,KAAjB,EAAwB;AACtB,WAAKM,QAAL;AACD;AACF;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAAA,UACpBC,KADoB,GACV,KAAKC,KADK,CACpBD,KADoB;;AAE5B,QAAID,SAAS,CAACC,KAAV,KAAoBA,KAAxB,EAA+B;AAC7B,WAAKH,QAAL;AACD;AACF;;AAEDA,EAAAA,QAAQ,GAAG;AACT,UAAMA,QAAQ,GAAGK,IAAI,CAACC,KAAL,CAAWP,YAAY,CAACQ,OAAb,CAAqB,OAArB,CAAX,CAAjB;AADS,UAESC,KAFT,GAEqBR,QAFrB,CAEDS,MAFC,CAESD,KAFT;AAGT,SAAKE,QAAL,CAAc;AAAEf,MAAAA,KAAK,EAAEa;AAAT,KAAd;AACD;;AAEDZ,EAAAA,SAAS,GAAG;AAAA,UACFe,WADE,GACc,KAAKP,KADnB,CACFO,WADE;AAEV,WAAOtB,GAAG,CAACsB,WAAD,CAAH,CAAiBC,QAAjB,EAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCC,UADD,GACgB,KAAKV,KADrB,CACCU,UADD;AAAA,UAECnB,KAFD,GAEW,KAAKD,KAFhB,CAECC,KAFD;AAGP,WACE;AAAQ,qBAAY,oBAApB;AAAyC,MAAA,SAAS,EAAC,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,qBAAY,wBAFd;AAGE,MAAA,GAAG,EAAC,WAHN;AAIE,MAAA,GAAG,EAAI,mCAAkC,KAAKC,SAAL,EAAiB,EAJ5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BkB,UAA/B,CAPF,EAQE;AAAM,qBAAY,cAAlB;AAAiC,MAAA,SAAS,EAAC,aAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0DnB,KAA1D,CARF,CADF;AAYD;;AAjDkC;;AAoDrCJ,MAAM,CAACwB,SAAP,GAAmB;AACjBJ,EAAAA,WAAW,EAAErB,SAAS,CAAC0B,MAAV,CAAiBC,UADb;AAEjBH,EAAAA,UAAU,EAAExB,SAAS,CAAC0B,MAAV,CAAiBC,UAFZ;AAGjBd,EAAAA,KAAK,EAAEb,SAAS,CAAC4B,MAAV,CAAiBD;AAHP,CAAnB;;AAMA,MAAME,eAAe,GAAIzB,KAAD,KAAY;AAClCoB,EAAAA,UAAU,EAAEpB,KAAK,CAAC0B,WAAN,CAAkBC,IADI;AAElCV,EAAAA,WAAW,EAAEjB,KAAK,CAAC0B,WAAN,CAAkBE;AAFG,CAAZ,CAAxB;;AAKA,eAAelC,OAAO,CAAC+B,eAAD,CAAP,CAAyB5B,MAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      total: 0,\n    };\n    this.emailUser = this.emailUser.bind(this);\n  }\n\n  componentDidMount() {\n    if (localStorage.state) {\n      this.getScore();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { index } = this.props;\n    if (prevProps.index !== index) {\n      this.getScore();\n    }\n  }\n\n  getScore() {\n    const getScore = JSON.parse(localStorage.getItem('state'));\n    const { player: { score } } = getScore;\n    this.setState({ total: score });\n  }\n\n  emailUser() {\n    const { emailPlayer } = this.props;\n    return md5(emailPlayer).toString();\n  }\n\n  render() {\n    const { namePlayer } = this.props;\n    const { total } = this.state;\n    return (\n      <header data-testid=\"header-player-name\" className=\"header-play\">\n        <img\n          className=\"gravatar-img\"\n          data-testid=\"header-profile-picture\"\n          alt=\"imageUser\"\n          src={ `https://www.gravatar.com/avatar/${this.emailUser()}` }\n        />\n        <span className=\"name-player\">{namePlayer}</span>\n        <span data-testid=\"header-score\" className=\"total-score\">{total}</span>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  emailPlayer: PropTypes.string.isRequired,\n  namePlayer: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  namePlayer: state.userReducer.name,\n  emailPlayer: state.userReducer.email,\n});\n\nexport default connect(mapStateToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}