{"ast":null,"code":"var _jsxFileName = \"/Users/ygormaia/trybe-projects/projectTrivia/src/pages/Login.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Button from '../components/Button';\nimport { saveLoginInfo } from '../redux/actions';\nimport img from './trivia.png';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      disabled: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.validadeLogin = this.validadeLogin.bind(this);\n    this.loginIn = this.loginIn.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange({\n    target\n  }) {\n    const name = target.name,\n          value = target.value;\n    this.setState({\n      [name]: value\n    }, () => this.validadeLogin());\n  }\n\n  validadeLogin() {\n    const regex = /^[a-z0-9.]+@[a-z0-9]+\\.[a-z]+(\\.[a-z]+)?$/i;\n    const _this$state = this.state,\n          email = _this$state.email,\n          name = _this$state.name;\n    const disabled = !(regex.test(email) && name.length >= 1);\n    this.setState({\n      disabled\n    });\n  }\n\n  async loginIn(path) {\n    const dispatchLogin = this.props.dispatchLogin;\n    const data = await (await fetch('https://opentdb.com/api_token.php?command=request')).json();\n    dispatchLogin(this.state);\n    localStorage.setItem('token', JSON.stringify(data.token));\n    this.handleClick(path);\n  }\n\n  handleClick(path) {\n    const history = this.props.history;\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          name = _this$state2.name;\n    history.push(path);\n    const state = {\n      player: {\n        name,\n        assertions: 0,\n        score: 0,\n        gravatarEmail: email\n      }\n    };\n    localStorage.setItem('state', JSON.stringify(state));\n  }\n\n  render() {\n    const disabled = this.state.disabled;\n    return React.createElement(\"div\", {\n      className: \"input-login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: img,\n      alt: \"Trivia\",\n      className: \"img-trivia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input-form-data\",\n      placeholder: \"Nome\",\n      id: \"name\",\n      name: \"name\",\n      \"data-testid\": \"input-player-name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input-form-data\",\n      placeholder: \"E-mail\",\n      id: \"email\",\n      name: \"email\",\n      \"data-testid\": \"input-gravatar-email\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(Button, {\n      className: \"button-play\",\n      test: \"btn-play\",\n      name: \"Jogar\",\n      disabled: disabled,\n      onClick: () => this.loginIn('/play'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"button-settings\",\n      test: \"btn-settings\",\n      name: \"Configura\\xE7\\xF5es\",\n      onClick: () => this.handleClick('/settings'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  }\n\n}\n\nLogin.propTypes = {\n  dispatchLogin: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchLogin: payload => dispatch(saveLoginInfo(payload))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/ygormaia/trybe-projects/projectTrivia/src/pages/Login.js"],"names":["React","PropTypes","connect","Button","saveLoginInfo","img","Login","Component","constructor","props","state","name","email","disabled","handleChange","bind","validadeLogin","loginIn","handleClick","target","value","setState","regex","test","length","path","dispatchLogin","data","fetch","json","localStorage","setItem","JSON","stringify","token","history","push","player","assertions","score","gravatarEmail","render","propTypes","func","isRequired","shape","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Button from '../components/Button';\nimport { saveLoginInfo } from '../redux/actions';\nimport img from './trivia.png';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      disabled: true,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.validadeLogin = this.validadeLogin.bind(this);\n    this.loginIn = this.loginIn.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    }, () => this.validadeLogin());\n  }\n\n  validadeLogin() {\n    const regex = /^[a-z0-9.]+@[a-z0-9]+\\.[a-z]+(\\.[a-z]+)?$/i;\n    const { email, name } = this.state;\n    const disabled = !(regex.test(email) && name.length >= 1);\n    this.setState({\n      disabled,\n    });\n  }\n\n  async loginIn(path) {\n    const { dispatchLogin } = this.props;\n    const data = await (await fetch('https://opentdb.com/api_token.php?command=request'))\n      .json();\n    dispatchLogin(this.state);\n    localStorage.setItem('token', JSON.stringify(data.token));\n    this.handleClick(path);\n  }\n\n  handleClick(path) {\n    const { history } = this.props;\n    const { email, name } = this.state;\n    history.push(path);\n    const state = {\n      player: {\n        name,\n        assertions: 0,\n        score: 0,\n        gravatarEmail: email,\n      },\n    };\n    localStorage.setItem('state', JSON.stringify(state));\n  }\n\n  render() {\n    const { disabled } = this.state;\n    return (\n      <div className=\"input-login\">\n        <img src={ img } alt=\"Trivia\" className=\"img-trivia\" />\n        <label htmlFor=\"name\">\n          <input\n            className=\"input-form-data\"\n            placeholder=\"Nome\"\n            id=\"name\"\n            name=\"name\"\n            data-testid=\"input-player-name\"\n            onChange={ this.handleChange }\n          />\n        </label>\n        <label htmlFor=\"email\">\n          <input\n            className=\"input-form-data\"\n            placeholder=\"E-mail\"\n            id=\"email\"\n            name=\"email\"\n            data-testid=\"input-gravatar-email\"\n            onChange={ this.handleChange }\n          />\n        </label>\n        <Button\n          className=\"button-play\"\n          test=\"btn-play\"\n          name=\"Jogar\"\n          disabled={ disabled }\n          onClick={ () => this.loginIn('/play') }\n        />\n        <Button\n          className=\"button-settings\"\n          test=\"btn-settings\"\n          name=\"Configurações\"\n          onClick={ () => this.handleClick('/settings') }\n        />\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  dispatchLogin: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchLogin: (payload) => dispatch(saveLoginInfo(payload)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}