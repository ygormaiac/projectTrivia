{"ast":null,"code":"var _jsxFileName = \"/Users/ygormaia/trybe-projects/sd-013-a-project-trivia-react-redux/src/components/Header.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.emailUser = this.emailUser.bind(this);\n  }\n\n  emailUser() {\n    const emailPlayer = this.props.emailPlayer;\n    return md5(emailPlayer).toString();\n  }\n\n  render() {\n    const namePlayer = this.props.namePlayer;\n    return React.createElement(\"header\", {\n      \"data-testid\": \"header-player-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      \"data-testid\": \"header-profile-picture\",\n      alt: \"imageUser\",\n      src: `https://www.gravatar.com/avatar/ ${this.emailUser()}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, namePlayer), React.createElement(\"span\", {\n      \"data-testid\": \"header-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"0\"));\n  }\n\n}\n\nHeader.propTypes = {\n  emailPlayer: PropTypes.string.isRequired,\n  namePlayer: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  namePlayer: state.userReducer.name,\n  emailPlayer: state.userReducer.email\n});\n\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["/Users/ygormaia/trybe-projects/sd-013-a-project-trivia-react-redux/src/components/Header.js"],"names":["React","connect","md5","PropTypes","Header","Component","constructor","emailUser","bind","emailPlayer","props","toString","render","namePlayer","propTypes","string","isRequired","mapStateToProps","state","userReducer","name","email"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAEDD,EAAAA,SAAS,GAAG;AAAA,UACFE,WADE,GACc,KAAKC,KADnB,CACFD,WADE;AAEV,WAAOP,GAAG,CAACO,WAAD,CAAH,CAAiBE,QAAjB,EAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCC,UADD,GACgB,KAAKH,KADrB,CACCG,UADD;AAEP,WACE;AAAQ,qBAAY,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,qBAAY,wBADd;AAEE,MAAA,GAAG,EAAC,WAFN;AAGE,MAAA,GAAG,EAAG,oCAAmC,KAAKN,SAAL,EAAiB,EAH5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOM,UAAP,CANF,EAOE;AAAM,qBAAY,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,CADF;AAWD;;AAzBkC;;AA4BrCT,MAAM,CAACU,SAAP,GAAmB;AACjBL,EAAAA,WAAW,EAAEN,SAAS,CAACY,MAAV,CAAiBC,UADb;AAEjBH,EAAAA,UAAU,EAAEV,SAAS,CAACY,MAAV,CAAiBC;AAFZ,CAAnB;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCL,EAAAA,UAAU,EAAEK,KAAK,CAACC,WAAN,CAAkBC,IADI;AAElCX,EAAAA,WAAW,EAAES,KAAK,CAACC,WAAN,CAAkBE;AAFG,CAAZ,CAAxB;;AAKA,eAAepB,OAAO,CAACgB,eAAD,CAAP,CAAyBb,MAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n\n    this.emailUser = this.emailUser.bind(this);\n  }\n\n  emailUser() {\n    const { emailPlayer } = this.props;\n    return md5(emailPlayer).toString();\n  }\n\n  render() {\n    const { namePlayer } = this.props;\n    return (\n      <header data-testid=\"header-player-name\">\n        <img\n          data-testid=\"header-profile-picture\"\n          alt=\"imageUser\"\n          src={`https://www.gravatar.com/avatar/ ${this.emailUser()}`}\n        />\n        <span>{namePlayer}</span>\n        <span data-testid=\"header-score\">0</span>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  emailPlayer: PropTypes.string.isRequired,\n  namePlayer: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  namePlayer: state.userReducer.name,\n  emailPlayer: state.userReducer.email,\n});\n\nexport default connect(mapStateToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}