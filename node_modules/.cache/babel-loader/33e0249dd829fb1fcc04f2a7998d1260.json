{"ast":null,"code":"var _jsxFileName = \"/Users/ygormaia/trybe-projects/sd-013-a-project-trivia-react-redux/src/pages/Login.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Button from '../components/Button';\nimport { saveLoginInfo } from '../redux/actions';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      disabled: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.validadeLogin = this.validadeLogin.bind(this);\n    this.loginIn = this.loginIn.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange({\n    target\n  }) {\n    const name = target.name,\n          value = target.value;\n    this.setState({\n      [name]: value\n    }, () => this.validadeLogin());\n  }\n\n  validadeLogin() {\n    const regex = /^[a-z0-9.]+@[a-z0-9]+\\.[a-z]+(\\.[a-z]+)?$/i;\n    const _this$state = this.state,\n          email = _this$state.email,\n          name = _this$state.name;\n    const disabled = !(regex.test(email) && name.length >= 1);\n    console.log(regex.test(email), email);\n    this.setState({\n      disabled\n    });\n  }\n\n  async loginIn(path) {\n    const dispatchLogin = this.props.dispatchLogin;\n    const data = await (await fetch('https://opentdb.com/api_token.php?command=request')).json();\n    dispatchLogin(this.state);\n    localStorage.setItem('token', JSON.stringify(data.token));\n    this.handleClick(path);\n  }\n\n  handleClick(path) {\n    const history = this.props.history;\n    history.push(path);\n  }\n\n  render() {\n    const disabled = this.state.disabled;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Nome:\", React.createElement(\"input\", {\n      id: \"name\",\n      name: \"name\",\n      \"data-testid\": \"input-player-name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Email:\", React.createElement(\"input\", {\n      id: \"email\",\n      name: \"email\",\n      \"data-testid\": \"input-gravatar-email\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(Button, {\n      test: \"btn-play\",\n      name: \"Jogar\",\n      disabled: disabled,\n      onClick: () => this.loginIn('/play'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Button, {\n      test: \"btn-settings\",\n      name: \"Configura\\xE7\\xF5es\",\n      onClick: () => this.handleClick('/settings'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  }\n\n}\n\nLogin.propTypes = {\n  dispatchLogin: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchLogin: payload => dispatch(saveLoginInfo(payload))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/ygormaia/trybe-projects/sd-013-a-project-trivia-react-redux/src/pages/Login.js"],"names":["React","PropTypes","connect","Button","saveLoginInfo","Login","Component","constructor","props","state","name","email","disabled","handleChange","bind","validadeLogin","loginIn","handleClick","target","value","setState","regex","test","length","console","log","path","dispatchLogin","data","fetch","json","localStorage","setItem","JSON","stringify","token","history","push","render","propTypes","func","isRequired","shape","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Button from '../components/Button';\nimport { saveLoginInfo } from '../redux/actions';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      disabled: true,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.validadeLogin = this.validadeLogin.bind(this);\n    this.loginIn = this.loginIn.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    }, () => this.validadeLogin());\n  }\n\n  validadeLogin() {\n    const regex = /^[a-z0-9.]+@[a-z0-9]+\\.[a-z]+(\\.[a-z]+)?$/i;\n    const { email, name } = this.state;\n    const disabled = !(regex.test(email) && name.length >= 1);\n    console.log(regex.test(email), email);\n    this.setState({\n      disabled,\n    });\n  }\n\n  async loginIn(path) {\n    const { dispatchLogin } = this.props;\n    const data = await (await fetch('https://opentdb.com/api_token.php?command=request'))\n      .json();\n    dispatchLogin(this.state);\n    localStorage.setItem('token', JSON.stringify(data.token));\n    this.handleClick(path);\n  }\n\n  handleClick(path) {\n    const { history } = this.props;\n    history.push(path);\n  }\n\n  render() {\n    const { disabled } = this.state;\n    return (\n      <div>\n        <label htmlFor=\"name\">\n          Nome:\n          <input\n            id=\"name\"\n            name=\"name\"\n            data-testid=\"input-player-name\"\n            onChange={ this.handleChange }\n          />\n        </label>\n        <label htmlFor=\"email\">\n          Email:\n          <input\n            id=\"email\"\n            name=\"email\"\n            data-testid=\"input-gravatar-email\"\n            onChange={ this.handleChange }\n          />\n        </label>\n        <Button\n          test=\"btn-play\"\n          name=\"Jogar\"\n          disabled={ disabled }\n          onClick={ () => this.loginIn('/play') }\n        />\n        <Button\n          test=\"btn-settings\"\n          name=\"Configurações\"\n          onClick={ () => this.handleClick('/settings') }\n        />\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  dispatchLogin: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchLogin: (payload) => dispatch(saveLoginInfo(payload)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}