{"ast":null,"code":"var _jsxFileName = \"/Users/ygormaia/trybe-projects/sd-013-a-project-trivia-react-redux/src/pages/Feedback.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Button from '../components/Button';\n\nclass Feedback extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      message: '',\n      rightAnswers: 0,\n      total: 0\n    };\n    this.handleMessage = this.handleMessage.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleMessage();\n  }\n\n  handleMessage() {\n    const getScore = JSON.parse(localStorage.getItem('state'));\n    const _getScore$player = getScore.player,\n          assertions = _getScore$player.assertions,\n          score = _getScore$player.score;\n    const NUM_ANSWER = 3;\n\n    if (assertions < NUM_ANSWER) {\n      this.setState({\n        message: 'Podia ser melhor...'\n      });\n    } else {\n      this.setState({\n        message: 'Mandou bem!'\n      });\n    }\n\n    this.setState({\n      rightAnswers: assertions,\n      total: score\n    });\n  }\n\n  handleClick(path) {\n    const history = this.props.history;\n    history.push(path);\n  }\n\n  render() {\n    const _this$state = this.state,\n          message = _this$state.message,\n          rightAnswers = _this$state.rightAnswers,\n          total = _this$state.total;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      \"data-testid\": \"feedback-text\",\n      className: \"feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, message), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, 'Você acertou ', React.createElement(\"span\", {\n      \"data-testid\": \"feedback-total-question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, rightAnswers), ' pergunta(s)'), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Pontua\\xE7\\xE3o total:\", React.createElement(\"span\", {\n      \"data-testid\": \"feedback-total-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, total)), React.createElement(Button, {\n      test: \"btn-play-again\",\n      name: \"Jogar novamente\",\n      onClick: () => this.handleClick('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Button, {\n      test: \"btn-ranking\",\n      name: \"Ver Ranking\",\n      onClick: () => this.handleClick('/ranking'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}\n\nFeedback.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};\nexport default Feedback;","map":{"version":3,"sources":["/Users/ygormaia/trybe-projects/sd-013-a-project-trivia-react-redux/src/pages/Feedback.js"],"names":["React","PropTypes","Header","Button","Feedback","Component","constructor","state","message","rightAnswers","total","handleMessage","bind","handleClick","componentDidMount","getScore","JSON","parse","localStorage","getItem","player","assertions","score","NUM_ANSWER","setState","path","history","props","push","render","propTypes","shape","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Button from '../components/Button';\n\nclass Feedback extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      message: '',\n      rightAnswers: 0,\n      total: 0,\n    };\n    this.handleMessage = this.handleMessage.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleMessage();\n  }\n\n  handleMessage() {\n    const getScore = JSON.parse(localStorage.getItem('state'));\n    const { player: { assertions, score } } = getScore;\n\n    const NUM_ANSWER = 3;\n    if (assertions < NUM_ANSWER) {\n      this.setState({ message: 'Podia ser melhor...' });\n    } else {\n      this.setState({ message: 'Mandou bem!' });\n    }\n\n    this.setState({\n      rightAnswers: assertions,\n      total: score,\n    });\n  }\n\n  handleClick(path) {\n    const { history } = this.props;\n    history.push(path);\n  }\n\n  render() {\n    const { message, rightAnswers, total } = this.state;\n\n    return (\n      <div>\n        <Header />\n        <h1 data-testid=\"feedback-text\" className=\"feedback\">{message}</h1>\n        <p>\n          {'Você acertou '}\n          <span data-testid=\"feedback-total-question\">{rightAnswers}</span>\n          {' pergunta(s)'}\n        </p>\n        <p>\n          Pontuação total:\n          <span data-testid=\"feedback-total-score\">{total}</span>\n        </p>\n        <Button\n          test=\"btn-play-again\"\n          name=\"Jogar novamente\"\n          onClick={ () => this.handleClick('/') }\n        />\n        <Button\n          test=\"btn-ranking\"\n          name=\"Ver Ranking\"\n          onClick={ () => this.handleClick('/ranking') }\n        />\n      </div>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default Feedback;\n"]},"metadata":{},"sourceType":"module"}